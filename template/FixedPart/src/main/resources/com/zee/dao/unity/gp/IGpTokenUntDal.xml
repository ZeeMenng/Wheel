<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zee.dao.unity.gp.IGpTokenUntDal" >

  <resultMap id="BaseResultMap" type="com.zee.ent.extend.gp.GpToken" >
              <id column="id" property="id" jdbcType="VARCHAR" />
              <result column="domain_id" property="domainId" jdbcType="VARCHAR" />
              <result column="user_id" property="userId" jdbcType="VARCHAR" />
              <result column="user_name" property="userName" jdbcType="VARCHAR" />
              <result column="access_token" property="accessToken" jdbcType="VARCHAR" />
              <result column="a_dead_time" property="aDeadTime" jdbcType="TIMESTAMP" />
              <result column="refresh_token" property="refreshToken" jdbcType="VARCHAR" />
              <result column="r_dead_time" property="rDeadTime" jdbcType="TIMESTAMP" />
              <result column="secret" property="secret" jdbcType="VARCHAR" />
              <result column="remark" property="remark" jdbcType="VARCHAR" />
              <result column="add_time" property="addTime" jdbcType="TIMESTAMP" />
              <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  
  <sql id="Base_Column_List" >
        id,domain_id,user_id,user_name,access_token,a_dead_time,refresh_token,r_dead_time,secret,remark,add_time,update_time
  </sql>
  
  <insert id="add" parameterType="com.zee.ent.extend.gp.GpToken" >
    insert into gp_token
    <trim prefix="(" suffix=")" suffixOverrides="," >
          <if test="id != null and id != '' " >
              id,
          </if>
      
          <if test="domainId != null and domainId != '' " >
              domain_id,
          </if>
      
          <if test="userId != null and userId != '' " >
              user_id,
          </if>
      
          <if test="userName != null and userName != '' " >
              user_name,
          </if>
      
          <if test="accessToken != null and accessToken != '' " >
              access_token,
          </if>
      
          <if test="aDeadTime != null " >
              a_dead_time,
          </if>
          <if test="refreshToken != null and refreshToken != '' " >
              refresh_token,
          </if>
      
          <if test="rDeadTime != null " >
              r_dead_time,
          </if>
          <if test="secret != null and secret != '' " >
              secret,
          </if>
      
          <if test="remark != null and remark != '' " >
              remark,
          </if>
      
          <if test="addTime != null " >
              add_time,
          </if>
          <if test="updateTime != null " >
              update_time,
          </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
          <if test="id != null and id != '' " >
              #{id,jdbcType=VARCHAR},
          </if>
          <if test="domainId != null and domainId != '' " >
              #{domainId,jdbcType=VARCHAR},
          </if>
          <if test="userId != null and userId != '' " >
              #{userId,jdbcType=VARCHAR},
          </if>
          <if test="userName != null and userName != '' " >
              #{userName,jdbcType=VARCHAR},
          </if>
          <if test="accessToken != null and accessToken != '' " >
              #{accessToken,jdbcType=VARCHAR},
          </if>
          <if test="aDeadTime != null " >
              #{aDeadTime,jdbcType=TIMESTAMP},
          </if>
          <if test="refreshToken != null and refreshToken != '' " >
              #{refreshToken,jdbcType=VARCHAR},
          </if>
          <if test="rDeadTime != null " >
              #{rDeadTime,jdbcType=TIMESTAMP},
          </if>
          <if test="secret != null and secret != '' " >
              #{secret,jdbcType=VARCHAR},
          </if>
          <if test="remark != null and remark != '' " >
              #{remark,jdbcType=VARCHAR},
          </if>
          <if test="addTime != null " >
              #{addTime,jdbcType=TIMESTAMP},
          </if>
          <if test="updateTime != null " >
              #{updateTime,jdbcType=TIMESTAMP},
          </if>
    </trim>
  </insert>
  
  <insert id="addList" parameterType="list">
    	insert into gp_token
    	<trim prefix="(" suffix=")">
    		<include refid="Base_Column_List" />
    	</trim>
    	values
    	<foreach collection="list" item="gpToken" index="index" separator=",">
            <trim prefix="(" suffix=")" suffixOverrides="," >

          #{gpToken.id,jdbcType=VARCHAR},
          #{gpToken.domainId,jdbcType=VARCHAR},
          #{gpToken.userId,jdbcType=VARCHAR},
          #{gpToken.userName,jdbcType=VARCHAR},
          #{gpToken.accessToken,jdbcType=VARCHAR},
          #{gpToken.aDeadTime,jdbcType=TIMESTAMP},
          #{gpToken.refreshToken,jdbcType=VARCHAR},
          #{gpToken.rDeadTime,jdbcType=TIMESTAMP},
          #{gpToken.secret,jdbcType=VARCHAR},
          #{gpToken.remark,jdbcType=VARCHAR},
          #{gpToken.addTime,jdbcType=TIMESTAMP},
          #{gpToken.updateTime,jdbcType=TIMESTAMP},

        </trim>
    	</foreach>
    </insert>


  <insert id="addListWithDffOrAdd" parameterType="list">
    	insert into gp_token
    	<trim prefix="(" suffix=")">
    		<include refid="Base_Column_List" />
    	</trim>
    	values
    	<foreach collection="list" item="gpToken" index="index" separator=",">
            <trim prefix="(" suffix=")" suffixOverrides="," >

          #{gpToken.id,jdbcType=VARCHAR},
          #{gpToken.domainId,jdbcType=VARCHAR},
          #{gpToken.userId,jdbcType=VARCHAR},
          #{gpToken.userName,jdbcType=VARCHAR},
          #{gpToken.accessToken,jdbcType=VARCHAR},
          #{gpToken.aDeadTime,jdbcType=TIMESTAMP},
          #{gpToken.refreshToken,jdbcType=VARCHAR},
          #{gpToken.rDeadTime,jdbcType=TIMESTAMP},
          #{gpToken.secret,jdbcType=VARCHAR},
          #{gpToken.remark,jdbcType=VARCHAR},
          #{gpToken.addTime,jdbcType=TIMESTAMP},
          #{gpToken.updateTime,jdbcType=TIMESTAMP},

        </trim>
    	</foreach>
        ON DUPLICATE KEY UPDATE
id=values(id),
domain_id=values(domain_id),
user_id=values(user_id),
user_name=values(user_name),
access_token=values(access_token),
a_dead_time=values(a_dead_time),
refresh_token=values(refresh_token),
r_dead_time=values(r_dead_time),
secret=values(secret),
remark=values(remark),
add_time=values(add_time),
update_time=values(update_time)
        
    </insert>


    <delete id="delete" parameterType="java.lang.String" >
        delete from gp_token
        where  id = #{id,jdbcType=VARCHAR}
    </delete>

	<delete id="deleteByDomainId" parameterType="java.lang.String">
    	delete from gp_token
    	where domain_id = #{domainId,jdbcType=VARCHAR}
    </delete>
    
   <delete id="deleteByDomainIdList" parameterType="list">
		delete from gp_token
		where domain_id  in
		<foreach collection="list" item="DomainId " index="index" open="(" close=")" separator=",">
			#{DomainId }
		</foreach>
	</delete>
    
    
    <select id="getListByDomainId" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from gp_token where domain_id = #{domainId,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByUserId" parameterType="java.lang.String">
    	delete from gp_token
    	where user_id = #{userId,jdbcType=VARCHAR}
    </delete>
    
   <delete id="deleteByUserIdList" parameterType="list">
		delete from gp_token
		where user_id  in
		<foreach collection="list" item="UserId " index="index" open="(" close=")" separator=",">
			#{UserId }
		</foreach>
	</delete>
    
    
    <select id="getListByUserId" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from gp_token where user_id = #{userId,jdbcType=VARCHAR}
	</select>
        
 	<delete id="deleteByCompositeIdList" parameterType="list">
		delete from gp_token
		where 1=1

   and domain_id in
		<foreach collection="list" item="gpToken" index="index" open="(" close=")" separator=",">
				#{gpToken.domainId,jdbcType=VARCHAR}
		</foreach>
   and id in
		<foreach collection="list" item="gpToken" index="index" open="(" close=")" separator=",">
				#{gpToken.id,jdbcType=VARCHAR}
		</foreach>
   and user_id in
		<foreach collection="list" item="gpToken" index="index" open="(" close=")" separator=",">
				#{gpToken.userId,jdbcType=VARCHAR}
		</foreach>
   and token_id in
		<foreach collection="list" item="gpToken" index="index" open="(" close=")" separator=",">
				#{gpToken.tokenId,jdbcType=VARCHAR}
		</foreach>
	</delete>
        

	<delete id="deleteByIdList" parameterType="list">
		delete from gp_token
		where id  in
		<foreach collection="list" item="id " index="index" open="(" close=")" separator=",">
			#{id }
		</foreach>
	</delete>
  
  
  
  <update id="update" parameterType="com.zee.ent.extend.gp.GpToken" >
    update gp_token
    <set >
                    <choose>
                   <when test="domainId != null and domainId=='-1'">
                     domain_id = null,
                  </when>
                  <when test="domainId != null and domainId=='-2'">
                     domain_id = '',
                  </when>
                  <when test="domainId != null  and domainId != '' " >
                     domain_id = #{domainId,jdbcType=VARCHAR},
                  </when>
                  </choose>
                    <choose>
                   <when test="userId != null and userId=='-1'">
                     user_id = null,
                  </when>
                  <when test="userId != null and userId=='-2'">
                     user_id = '',
                  </when>
                  <when test="userId != null  and userId != '' " >
                     user_id = #{userId,jdbcType=VARCHAR},
                  </when>
                  </choose>
                    <choose>
                   <when test="userName != null and userName=='-1'">
                     user_name = null,
                  </when>
                  <when test="userName != null and userName=='-2'">
                     user_name = '',
                  </when>
                  <when test="userName != null  and userName != '' " >
                     user_name = #{userName,jdbcType=VARCHAR},
                  </when>
                  </choose>
                    <choose>
                   <when test="accessToken != null and accessToken=='-1'">
                     access_token = null,
                  </when>
                  <when test="accessToken != null and accessToken=='-2'">
                     access_token = '',
                  </when>
                  <when test="accessToken != null  and accessToken != '' " >
                     access_token = #{accessToken,jdbcType=VARCHAR},
                  </when>
                  </choose>
                  <if test="aDeadTime != null ">
                     a_dead_time = #{aDeadTime,jdbcType=TIMESTAMP},
                  </if>
                    <choose>
                   <when test="refreshToken != null and refreshToken=='-1'">
                     refresh_token = null,
                  </when>
                  <when test="refreshToken != null and refreshToken=='-2'">
                     refresh_token = '',
                  </when>
                  <when test="refreshToken != null  and refreshToken != '' " >
                     refresh_token = #{refreshToken,jdbcType=VARCHAR},
                  </when>
                  </choose>
                  <if test="rDeadTime != null ">
                     r_dead_time = #{rDeadTime,jdbcType=TIMESTAMP},
                  </if>
                    <choose>
                   <when test="secret != null and secret=='-1'">
                     secret = null,
                  </when>
                  <when test="secret != null and secret=='-2'">
                     secret = '',
                  </when>
                  <when test="secret != null  and secret != '' " >
                     secret = #{secret,jdbcType=VARCHAR},
                  </when>
                  </choose>
                    <choose>
                   <when test="remark != null and remark=='-1'">
                     remark = null,
                  </when>
                  <when test="remark != null and remark=='-2'">
                     remark = '',
                  </when>
                  <when test="remark != null  and remark != '' " >
                     remark = #{remark,jdbcType=VARCHAR},
                  </when>
                  </choose>
                  <if test="addTime != null ">
                     add_time = #{addTime,jdbcType=TIMESTAMP},
                  </if>
                  <if test="updateTime != null ">
                     update_time = #{updateTime,jdbcType=TIMESTAMP},
                  </if>
   </set>
                 where  id = #{id,jdbcType=VARCHAR}
  </update>
  
<update id="updateList">
    update gp_token
    <set >
                  <if test="t.domainId != null  and t.domainId != '' " >
                     domain_id = #{t.domainId,jdbcType=VARCHAR},
                  </if>
                  <if test="t.userId != null  and t.userId != '' " >
                     user_id = #{t.userId,jdbcType=VARCHAR},
                  </if>
                  <if test="t.userName != null  and t.userName != '' " >
                     user_name = #{t.userName,jdbcType=VARCHAR},
                  </if>
                  <if test="t.accessToken != null  and t.accessToken != '' " >
                     access_token = #{t.accessToken,jdbcType=VARCHAR},
                  </if>
                  <if test="t.aDeadTime != null ">
                     a_dead_time = #{t.aDeadTime,jdbcType=TIMESTAMP},
                  </if>
                  <if test="t.refreshToken != null  and t.refreshToken != '' " >
                     refresh_token = #{t.refreshToken,jdbcType=VARCHAR},
                  </if>
                  <if test="t.rDeadTime != null ">
                     r_dead_time = #{t.rDeadTime,jdbcType=TIMESTAMP},
                  </if>
                  <if test="t.secret != null  and t.secret != '' " >
                     secret = #{t.secret,jdbcType=VARCHAR},
                  </if>
                  <if test="t.remark != null  and t.remark != '' " >
                     remark = #{t.remark,jdbcType=VARCHAR},
                  </if>
                  <if test="t.addTime != null ">
                     add_time = #{t.addTime,jdbcType=TIMESTAMP},
                  </if>
                  <if test="t.updateTime != null ">
                     update_time = #{t.updateTime,jdbcType=TIMESTAMP},
                  </if>
   </set>
	
		where id  in
		<foreach collection="idList" item="id " index="index" open="(" close=")" separator=",">
			#{id }
		</foreach>
   
  </update>
  
<update id="updateListWithDff"  parameterType="list">
    update gp_token
		<trim prefix="set" suffixOverrides=",">
         <trim prefix="domain_id =case" suffix="end,">
              <foreach collection="list" item="gpToken" index="index">
                  <if test="gpToken.domainId != null and gpToken.domainId  != ''  and gpToken.domainId  != '-1' ">
                     when id=#{gpToken.id} then #{gpToken.domainId,jdbcType=VARCHAR}
                  </if>
                  <if test="gpToken.domainId != null  and gpToken.domainId  == '-1' ">
                     when id=#{gpToken.id} then null
                  </if>  
                   <if test="gpToken.domainId != null  and gpToken.domainId  == '-2' ">
                     when id=#{gpToken.id} then ''
                  </if> 
              </foreach>
         </trim>
         <trim prefix="user_id =case" suffix="end,">
              <foreach collection="list" item="gpToken" index="index">
                  <if test="gpToken.userId != null and gpToken.userId  != ''  and gpToken.userId  != '-1' ">
                     when id=#{gpToken.id} then #{gpToken.userId,jdbcType=VARCHAR}
                  </if>
                  <if test="gpToken.userId != null  and gpToken.userId  == '-1' ">
                     when id=#{gpToken.id} then null
                  </if>  
                   <if test="gpToken.userId != null  and gpToken.userId  == '-2' ">
                     when id=#{gpToken.id} then ''
                  </if> 
              </foreach>
         </trim>
         <trim prefix="user_name =case" suffix="end,">
              <foreach collection="list" item="gpToken" index="index">
                  <if test="gpToken.userName != null and gpToken.userName  != ''  and gpToken.userName  != '-1' ">
                     when id=#{gpToken.id} then #{gpToken.userName,jdbcType=VARCHAR}
                  </if>
                  <if test="gpToken.userName != null  and gpToken.userName  == '-1' ">
                     when id=#{gpToken.id} then null
                  </if>  
                   <if test="gpToken.userName != null  and gpToken.userName  == '-2' ">
                     when id=#{gpToken.id} then ''
                  </if> 
              </foreach>
         </trim>
         <trim prefix="access_token =case" suffix="end,">
              <foreach collection="list" item="gpToken" index="index">
                  <if test="gpToken.accessToken != null and gpToken.accessToken  != ''  and gpToken.accessToken  != '-1' ">
                     when id=#{gpToken.id} then #{gpToken.accessToken,jdbcType=VARCHAR}
                  </if>
                  <if test="gpToken.accessToken != null  and gpToken.accessToken  == '-1' ">
                     when id=#{gpToken.id} then null
                  </if>  
                   <if test="gpToken.accessToken != null  and gpToken.accessToken  == '-2' ">
                     when id=#{gpToken.id} then ''
                  </if> 
              </foreach>
         </trim>
         <trim prefix="a_dead_time =case" suffix="end,">
              <foreach collection="list" item="gpToken" index="index">
                  <if test="gpToken.aDeadTime != null " >
                     when id=#{gpToken.id} then #{gpToken.aDeadTime,jdbcType=TIMESTAMP}
                  </if>
              </foreach>
         </trim>
         <trim prefix="refresh_token =case" suffix="end,">
              <foreach collection="list" item="gpToken" index="index">
                  <if test="gpToken.refreshToken != null and gpToken.refreshToken  != ''  and gpToken.refreshToken  != '-1' ">
                     when id=#{gpToken.id} then #{gpToken.refreshToken,jdbcType=VARCHAR}
                  </if>
                  <if test="gpToken.refreshToken != null  and gpToken.refreshToken  == '-1' ">
                     when id=#{gpToken.id} then null
                  </if>  
                   <if test="gpToken.refreshToken != null  and gpToken.refreshToken  == '-2' ">
                     when id=#{gpToken.id} then ''
                  </if> 
              </foreach>
         </trim>
         <trim prefix="r_dead_time =case" suffix="end,">
              <foreach collection="list" item="gpToken" index="index">
                  <if test="gpToken.rDeadTime != null " >
                     when id=#{gpToken.id} then #{gpToken.rDeadTime,jdbcType=TIMESTAMP}
                  </if>
              </foreach>
         </trim>
         <trim prefix="secret =case" suffix="end,">
              <foreach collection="list" item="gpToken" index="index">
                  <if test="gpToken.secret != null and gpToken.secret  != ''  and gpToken.secret  != '-1' ">
                     when id=#{gpToken.id} then #{gpToken.secret,jdbcType=VARCHAR}
                  </if>
                  <if test="gpToken.secret != null  and gpToken.secret  == '-1' ">
                     when id=#{gpToken.id} then null
                  </if>  
                   <if test="gpToken.secret != null  and gpToken.secret  == '-2' ">
                     when id=#{gpToken.id} then ''
                  </if> 
              </foreach>
         </trim>
         <trim prefix="remark =case" suffix="end,">
              <foreach collection="list" item="gpToken" index="index">
                  <if test="gpToken.remark != null and gpToken.remark  != ''  and gpToken.remark  != '-1' ">
                     when id=#{gpToken.id} then #{gpToken.remark,jdbcType=VARCHAR}
                  </if>
                  <if test="gpToken.remark != null  and gpToken.remark  == '-1' ">
                     when id=#{gpToken.id} then null
                  </if>  
                   <if test="gpToken.remark != null  and gpToken.remark  == '-2' ">
                     when id=#{gpToken.id} then ''
                  </if> 
              </foreach>
         </trim>
         <trim prefix="add_time =case" suffix="end,">
              <foreach collection="list" item="gpToken" index="index">
                  <if test="gpToken.addTime != null " >
                     when id=#{gpToken.id} then #{gpToken.addTime,jdbcType=TIMESTAMP}
                  </if>
              </foreach>
         </trim>
         <trim prefix="update_time =case" suffix="end,">
              <foreach collection="list" item="gpToken" index="index">
                  <if test="gpToken.updateTime != null " >
                     when id=#{gpToken.id} then #{gpToken.updateTime,jdbcType=TIMESTAMP}
                  </if>
              </foreach>
         </trim>
    </trim>
    where id in
		<foreach collection="list" item="gpToken" index="index" open="(" close=")" separator=",">
			#{gpToken.id,jdbcType=VARCHAR}
		</foreach>
  </update>

  
  
  <insert id="updateListWithDffOrAdd" useGeneratedKeys="true" keyProperty="id" parameterType="list">
    replace into gp_token
        <trim prefix="(" suffix=")" suffixOverrides="," >
id,
domain_id,
user_id,
user_name,
access_token,
a_dead_time,
refresh_token,
r_dead_time,
secret,
remark,
add_time,
update_time,
    </trim>
    VALUES
    <foreach collection="list" item="gpToken" index="index" separator=",">
      <trim prefix="(" suffix=")" suffixOverrides=",">
              #{gpToken.id ,jdbcType=VARCHAR},
                  
                     #{gpToken.domainId ,jdbcType=VARCHAR},
                  
                  
                     #{gpToken.userId ,jdbcType=VARCHAR},
                  
                  
                     #{gpToken.userName ,jdbcType=VARCHAR},
                  
                  
                     #{gpToken.accessToken ,jdbcType=VARCHAR},
                  
                  
                    #{gpToken.aDeadTime,jdbcType=TIMESTAMP},
            
                  
                     #{gpToken.refreshToken ,jdbcType=VARCHAR},
                  
                  
                    #{gpToken.rDeadTime,jdbcType=TIMESTAMP},
            
                  
                     #{gpToken.secret ,jdbcType=VARCHAR},
                  
                  
                     #{gpToken.remark ,jdbcType=VARCHAR},
                  
                  
                    #{gpToken.addTime,jdbcType=TIMESTAMP},
            
                  
                    #{gpToken.updateTime,jdbcType=TIMESTAMP},
            
      </trim>
    </foreach>
  </insert>


  <select id="getModel" resultMap="BaseResultMap" parameterType="java.lang.String" >
          select 
                 <include refid="Base_Column_List" />
          from gp_token
           where  id = #{id,jdbcType=VARCHAR}
  </select>
  
   
  
  <select id="getList" resultMap="BaseResultMap" parameterType="map" >
          select
                <include refid="Base_Column_List" />
          from gp_token where 1 = 1
        <if test="EntityRelated.id != null and EntityRelated.id != '' ">
			and id LIKE CONCAT('%',#{EntityRelated.id,jdbcType=VARCHAR},'%')
		</if>

		<if test="EntityRelated.beginADeadTime != null ">
				<![CDATA[ AND  unix_timestamp(a_dead_time)>=unix_timestamp(#{EntityRelated.beginADeadTime})]]> 
		</if>
		<if test="EntityRelated.endADeadTime != null ">
				<![CDATA[ AND  unix_timestamp(a_dead_time)<unix_timestamp(#{EntityRelated.endADeadTime})]]> 
		</if>
		<if test="EntityRelated.accessToken != null and EntityRelated.accessToken != '' ">
 				and  access_token LIKE CONCAT('%',#{EntityRelated.accessToken,jdbcType=VARCHAR},'%') 
		</if>
		<if test="EntityRelated.beginAddTime != null ">
				<![CDATA[ AND  unix_timestamp(add_time)>=unix_timestamp(#{EntityRelated.beginAddTime})]]> 
		</if>
		<if test="EntityRelated.endAddTime != null ">
				<![CDATA[ AND  unix_timestamp(add_time)<unix_timestamp(#{EntityRelated.endAddTime})]]> 
		</if>
		<if test="EntityRelated.domainId != null and EntityRelated.domainId != '' ">
				and domain_id = #{EntityRelated.domainId,jdbcType=VARCHAR} 
		</if>
		<if test="EntityRelated.id != null and EntityRelated.id != '' ">
				and id = #{EntityRelated.id,jdbcType=VARCHAR} 
		</if>
		<if test="EntityRelated.beginRDeadTime != null ">
				<![CDATA[ AND  unix_timestamp(r_dead_time)>=unix_timestamp(#{EntityRelated.beginRDeadTime})]]> 
		</if>
		<if test="EntityRelated.endRDeadTime != null ">
				<![CDATA[ AND  unix_timestamp(r_dead_time)<unix_timestamp(#{EntityRelated.endRDeadTime})]]> 
		</if>
		<if test="EntityRelated.refreshToken != null and EntityRelated.refreshToken != '' ">
 				and  refresh_token LIKE CONCAT('%',#{EntityRelated.refreshToken,jdbcType=VARCHAR},'%') 
		</if>
		<if test="EntityRelated.remark != null and EntityRelated.remark != '' ">
 				and  remark LIKE CONCAT('%',#{EntityRelated.remark,jdbcType=VARCHAR},'%') 
		</if>
		<if test="EntityRelated.secret != null and EntityRelated.secret != '' ">
 				and  secret LIKE CONCAT('%',#{EntityRelated.secret,jdbcType=VARCHAR},'%') 
		</if>
		<if test="EntityRelated.beginUpdateTime != null ">
				<![CDATA[ AND  unix_timestamp(update_time)>=unix_timestamp(#{EntityRelated.beginUpdateTime})]]> 
		</if>
		<if test="EntityRelated.endUpdateTime != null ">
				<![CDATA[ AND  unix_timestamp(update_time)<unix_timestamp(#{EntityRelated.endUpdateTime})]]> 
		</if>
		<if test="EntityRelated.userId != null and EntityRelated.userId != '' ">
				and user_id = #{EntityRelated.userId,jdbcType=VARCHAR} 
		</if>
		<if test="EntityRelated.userName != null and EntityRelated.userName != '' ">
 				and  user_name LIKE CONCAT('%',#{EntityRelated.userName,jdbcType=VARCHAR},'%') 
		</if>


		<if test="OrderList != null and OrderList!=null">
			order by
			<foreach collection="OrderList" item="Order" index="index" separator=",">
				${Order.columnName}
				<if test="Order.isASC">
					ASC
				</if>
				<if test="!Order.isASC">
					DESC
				</if>
			</foreach>
		</if>
  </select>
  
	<select id="getListBySQL" resultType="java.util.HashMap" parameterType="String">
		<if test="value!=null and value!=''">
			${value}
		</if>
	</select>

  <cache />
</mapper>